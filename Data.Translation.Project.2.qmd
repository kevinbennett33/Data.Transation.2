---
title: "Data Translation Project"
format: html
editor: visual
---

```{r}
# Load Necessary Packages
library(lubridate)
library(stringr)
library(tidyverse)
library(vtable)
library(fixest)
library(readr)
library(dplyr)
library(rio)
library(ipumsr)
```

```{r}
# Load Data
ddi <- read_ipums_ddi("cps_00002.xml")
Translation.data <- read_ipums_micro(ddi)

# Show only rows from 2015 and beyond 
Translation.data$YEAR <- as.numeric(Translation.data$YEAR)

Translation.data <- Translation.data[Translation.data$YEAR >= 2015, ]

# Filter out ASECFLAG data, so that data is cleaner. 
Translation.data <- Translation.data %>% filter(is.na(ASECFLAG))

# Filter data so that only rows where EMPSTAT is equal to 10 (employed) or 21 (unemployed) are included. 
Translation.data <- Translation.data %>% filter(EMPSTAT %in% c(10, 21))
```

# 1) How has COVID affected the health of the retail Industry, as measured by employment?

```{r}
# Join indnames.csv and the Translation.data df
# Read in indnames.csv
indnames <- import('indnames.csv')

# Rename the IND column in Translation.data to ind so that we can join them, using names()[].
names(Translation.data)[20] <- "ind"

# Join Translation.data with indnames using the 'ind' column.
Translation.data <- 
  inner_join(Translation.data, indnames, by = "ind")
```

```{r}
# Join year and month columns together and format as date.
Translation.data <- Translation.data %>% mutate(Date.year.month = ym(paste0(YEAR, '/',MONTH)))

# Add a Cutoff Variable at 3.11.20 to indicate the WHO recognition of COVId as a global pandemic. # need to edit. 
Translation.data <- Translation.data %>% mutate(covid.pre.post = case_when(
  Date.year.month <= ym('2020/03') ~ "Before",
  Date.year.month > ym('2020/03') ~ "After"
))

# Create character variable for employment. Employed = EMPSTAT == 10 | Unemployed = EMPSTAT == 21
Translation.data <- Translation.data %>% mutate(Employment.Status = case_when(
  EMPSTAT == 10 ~ "EMPLOYED",
  EMPSTAT == 21 ~ "UNEMPLOYED"
))

# Create binary variable for employment. Employed = EMPSTAT == 10 | Unemployed = EMPSTAT == 21
Translation.data <- Translation.data %>% mutate(Employment.Status.numeric = case_when(
  EMPSTAT == 10 ~ 1,
  EMPSTAT == 21 ~ 0
))

# Create a character variable for retail trade employee. Retail Employee = indname == 'Retail Trade' 
Translation.data <- Translation.data %>% mutate(Retail.Trade.Employee = case_when(
  indname == 'Retail Trade' ~ "TRUE",
  TRUE ~ "FALSE"
))

# Create new data frame with only individuals employed in retail
Retail.data <- Translation.data %>% 
  filter(Retail.Trade.Employee == "TRUE")
```

```{r}
# Visual for number of retail employees per month.
# Create data set that contains only Retail data: in "Retail Trade" and EMPSTAT == 10 and 21
Retail.data.visual <- Translation.data %>% filter(indname == "Retail Trade" & EMPSTAT %in% c(10, 21))

# Create a new column that contains a varible that counts the number of retail employees, per month. 
Retail.data.visual <- Retail.data.visual %>% group_by(Date.year.month) %>%
  mutate(count.EMPSTAT.10 = sum(EMPSTAT == 10),
         count.EMPSTAT.21 = sum(EMPSTAT == 21),
         )
# Clean so that there is only one obeervation per month.
Retail.data.visual <- Retail.data.visual %>% distinct(Date.year.month, covid.pre.post, .keep_all = TRUE)

# Graph data
Plot.point.1 <- ggplot(Retail.data.visual, aes(x = Date.year.month, y = count.EMPSTAT.10)) +
  geom_point(color = "blue") +
  geom_vline(xintercept = ym('2020/03'), color = "orange", linetype = "dashed") +
  theme_minimal() +
  labs(title = 'Employment in Retail Trade from 2019-2022', x = 'Date', y = 'Count of Retail Trade Employees')
Plot.point.1
```

```{r}
# Regression Model
Q1.reg <- Retail.data %>% feols(Employment.Status.numeric ~ covid.pre.post == 'After')

etable(Q1.reg)
```

# 2)

```{r}
# edit: I want fixed effects for indname (fixed effects for group).

Q2.reg <- Translation.data %>% 
  feols(Employment.Status.numeric ~ i(covid.pre.post, Retail.Trade.Employee, ref = 'Before'))

etable(Q2.reg)
```

```{r}
# Visual for number of employees per month, by industry. 
# data set containing EMPSTAT == c(10,21) for all categories
Industry.data.visual <- Translation.data %>% filter(EMPSTAT %in% c(10, 21))

Industry.data.visual <- Industry.data.visual %>% group_by(Date.year.month, indname) %>%
  mutate(count.EMPSTAT.10 = sum(EMPSTAT == 10),
         count.EMPSTAT.21 = sum(EMPSTAT == 21),
         )

Industry.data.visual <- Industry.data.visual %>% distinct(Date.year.month, covid.pre.post, .keep_all = TRUE)

# Graph data
Plot.point.2 <- ggplot(Industry.data.visual, aes(x = Date.year.month, y = count.EMPSTAT.10, color = indname)) +
  geom_point() +
  geom_vline(xintercept = ym('2020/03'), color = "orange", linetype = "dashed") +
  theme_minimal() +
  labs(title = 'Employment from 2019-2022', x = 'Date', y = 'Count of Employees')
Plot.point.2
```

# 3) 

```{r}

```
