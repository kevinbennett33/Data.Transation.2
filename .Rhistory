# Calculate the percentage of people employed in each industry code range per month
result <- left_join(count_data, total_employed, by = c("YEAR", "MONTH")) %>%
mutate(percentage = employed_count / total_employed * 100)
# Print the result
print(result)
View(result)
# Each other industry as a percentage of total employed people
# Calculate the count of people employed in each industry code range per month
# Load the dplyr package
library(dplyr)
# Assuming your dataset is stored in a data frame called 'Translation.data'
# Define the industry code ranges
code_ranges <- list(
"4760-5790" = c(4760, 5790),
"0370-0490" = c(0370, 0490),
"0770" = c(0770, 0770),
"070-3990" = c(070, 3990),
"6870-6992" = c(6870, 6992),
"7071-7190" = c(7071, 7190),
"7270-7490" = c(7270, 7490),
"7570" = c(7570, 7570),
"7580-7790" = c(7580, 7790),
"7860-7890" = c(7860, 7890),
"7970-8470" = c(7970, 8470),
"8561-8590" = c(8561, 8590),
"8660-8690" = c(8660, 8690),
"8770-9290" = c(8770, 9290),
"9370-9590" = c(9370, 9590),
"9670-9870" = c(9670, 9870),
"9920" = c(9920, 9920)
)
# Calculate the count of people employed in each industry code range per month
count_data <- Translation.data %>%
filter(EMPSTAT == 10) %>%
group_by(YEAR, MONTH) %>%
summarize(
employed_count = n(),
across(all_of(names(code_ranges)), ~ sum(IND >= .[1] & IND <= .[2]))
)
# Each other industry as a percentage of total employed people.
result <- Translation.data %>%
filter(IND >= 4760 & IND <= 5790, EMPSTAT == 10) %>%
group_by(YEAR, MONTH) %>%
summarize(employed.retail = n()) %>%
ungroup() %>%
mutate(total.employed = Translation.data %>%
filter(EMPSTAT == 10) %>%
count(YEAR, MONTH) %>%
pull(n),
percentage = employed.retail / total.employed * 100),
# Each other industry as a percentage of total employed people.
result <- Translation.data %>%
filter(IND >= 4760 & IND <= 5790, EMPSTAT == 10) %>%
group_by(YEAR, MONTH) %>%
summarize(employed.retail = n()) %>%
ungroup() %>%
mutate(total.employed = Translation.data %>%
filter(EMPSTAT == 10) %>%
count(YEAR, MONTH) %>%
pull(n),
percentage = employed.retail / total.employed * 100)
filter(IND >= 0170 & IND <= 0290 , EMPSTAT == 10) %>%
group_by(YEAR, MONTH) %>%
summarize(employed.agriculture = n()) %>%
ungroup() %>%
mutate(total.employed = Translation.data %>%
filter(EMPSTAT == 10) %>%
count(YEAR, MONTH) %>%
pull(n),
percentage = employed.agriculture / total.employed * 100))
result <- Translation.data %>%
filter(IND >= 0170 & IND <= 0290 , EMPSTAT == 10) %>%
group_by(YEAR, MONTH) %>%
summarize(employed.agriculture = n()) %>%
ungroup() %>%
mutate(total.employed = Translation.data %>%
filter(EMPSTAT == 10) %>%
count(YEAR, MONTH) %>%
pull(n),
percentage = employed.agriculture / total.employed * 100))
result <- Translation.data %>%
filter(IND >= 0170 & IND <= 0290, EMPSTAT == 10) %>%
group_by(YEAR, MONTH) %>%
summarize(employed.agriculture = n()) %>%
ungroup() %>%
mutate(total.employed = Translation.data %>%
filter(EMPSTAT == 10) %>%
count(YEAR, MONTH) %>%
pull(n),
percentage = employed.agriculture / total.employed * 100))
# Each other industry as a percentage of total employed people.
result <- Translation.data %>%
filter(IND >= 4760 & IND <= 5790, EMPSTAT == 10) %>%
group_by(YEAR, MONTH) %>%
summarize(employed.retail = n()) %>%
ungroup() %>%
mutate(total.employed = Translation.data %>%
filter(EMPSTAT == 10) %>%
count(YEAR, MONTH) %>%
pull(n),
percentage = employed.retail / total.employed * 100)
result <- Translation.data %>%
filter(IND >= 0170 & IND <= 0290, EMPSTAT == 10) %>%
group_by(YEAR, MONTH) %>%
summarize(employed.agriculture = n()) %>%
ungroup() %>%
mutate(total.employed = Translation.data %>%
filter(EMPSTAT == 10) %>%
count(YEAR, MONTH) %>%
pull(n),
percentage = employed.agriculture / total.employed * 100))
result <- Translation.data %>%
filter(IND >= 0170 & IND <= 0290, EMPSTAT == 10) %>%
group_by(YEAR, MONTH) %>%
summarize(employed.agriculture = n()) %>%
ungroup() %>%
mutate(total.employed = Translation.data %>%
filter(EMPSTAT == 10) %>%
count(YEAR, MONTH) %>%
pull(n),
percentage = employed.agriculture / total.employed * 100))
result <- Translation.data %>%
filter(IND >= 0170 & IND <= 0290, EMPSTAT == 10) %>%
group_by(YEAR, MONTH) %>%
summarize(employed.agriculture = n()) %>%
ungroup() %>%
mutate(total.employed = Translation.data %>%
filter(EMPSTAT == 10) %>%
count(YEAR, MONTH) %>%
pull(n),
percentage = employed.agriculture / total.employed * 100)
View(result)
result <- Translation.data %>%
filter(IND >= 4760 & IND <= 5790, EMPSTAT == 10) %>%
group_by(YEAR, MONTH) %>%
summarize(employed.retail = n()) %>%
ungroup() %>%
mutate(total.employed = Translation.data %>%
filter(EMPSTAT == 10) %>%
count(YEAR, MONTH) %>%
pull(n),
percentage = employed.retail / total.employed * 100)
result <- Translation.data %>%
filter(IND >= 0170 & IND <= 0290, EMPSTAT == 10) %>%
group_by(YEAR, MONTH) %>%
summarize(employed.agriculture = n()) %>%
ungroup() %>%
mutate(total.employed = Translation.data %>%
filter(EMPSTAT == 10) %>%
count(YEAR, MONTH) %>%
pull(n),
percentage = employed.agriculture / total.employed * 100)
View(result)
# Each other industry as a percentage of total employed people.
result <- Translation.data %>%
filter(EMPSTAT == 10) %>%
group_by(YEAR, MONTH) %>%
summarize(
employed.retail = sum(IND >= 4760 & IND <= 5790),
employed.agriculture = sum(IND >= 0170 & IND <= 0290),
total.employed = n(),
percentage.retail = employed.retail / total.employed * 100,
percentage.agriculture = employed.agriculture / total.employed * 100
)
# Print the result
print(result)
View(result)
result <- Translation.data %>%
filter(EMPSTAT == 10) %>%
group_by(YEAR, MONTH) %>%
summarize(
employed.retail = sum(IND >= 4760 & IND <= 5790),
employed.agriculture = sum(IND >= 0170 & IND <= 0290),
employed.mining = um(IND >= 0370 & IND <= 0490),
total.employed = n(),
percentage.retail = employed.retail / total.employed * 100,
percentage.agriculture = employed.agriculture / total.employed * 100,
percentage.mining = employed.mining / total_employed * 100
)
# Each other industry as a percentage of total employed people.
result <- Translation.data %>%
filter(EMPSTAT == 10) %>%
group_by(YEAR, MONTH) %>%
summarize(
employed.retail = sum(IND >= 4760 & IND <= 5790),
employed.agriculture = sum(IND >= 0170 & IND <= 0290),
employed.mining = sum(IND >= 0370 & IND <= 0490),
total.employed = n(),
percentage.retail = employed.retail / total.employed * 100,
percentage.agriculture = employed.agriculture / total.employed * 100,
percentage.mining = employed.mining / total_employed * 100
)
# Print the result
print(result)
# Each other industry as a percentage of total employed people.
result <- Translation.data %>%
filter(EMPSTAT == 10) %>%
group_by(YEAR, MONTH) %>%
summarize(
employed.retail = sum(IND >= 4760 & IND <= 5790),
employed.agriculture = sum(IND >= 0170 & IND <= 0290),
employed.mining = sum(IND >= 0370 & IND <= 0490),
employed.construction = sum(IND >= 0370 & IND <= 0490),
employed.manufacturing = sum(IND >= 1070 & IND <= 3990),
employed.finance.insurance = sum(IND >= 6870 & IND <= 6992),
employed.RE.rental = sum(IND >= 7071 & IND <= 7490),
employed.science.technical.professional = sum(IND >= 7270 & IND <= 7490),
employed.management = sum(IND >= 7570),
employed.admin.waste = sum(IND >= 7580 & IND <= 7790),
employed.education = sum(IND >= 7860 & IND <= 7890),
employed.health.social = sum(IND >= 7970 & IND <= 8470),
employed.entertainment = sum(IND >= 8561 & IND <= 8590),
employed.foodserve = sum(IND >= 8660 & IND <= 8690),
employed.other = sum(IND >= 8770 & IND <= 9290),
employed.publicadmin = sum(IND >= 9370 & IND <= 9590),
employed.military = sum(IND >= 9670 & IND <= 9870),
employed.unemployed = sum(IND >= 9920),
total.employed = n(),
percentage.retail = employed.retail / total.employed * 100,
percentage.agriculture = employed.agriculture / total.employed * 100,
percentage.mining = employed.mining / total_employed * 100,
percentage.construction = employed.construction / total.employed * 100,
percentage.manufacturing = employed.manufacturing / total.employed * 100,
percentage.finance.insurance = employed.finance.insurance / total.employed * 100,
percentage.RE.rental = employed.RE.rental / total.employed * 100,
percentage.science.technical.professional = employed.science.technical.professional / total.employed * 100,
percentage.management = employed.management / total.employed * 100,
percentage.admin.waste = employed.admin.waste / total.employed * 100,
percentage.education = employed.education / total.employed * 100,
percentage.health.social = employed.health.social/ total.employed * 100,
percentage.entertainment = employed.entertainment / total.employed * 100,
percentage.foodserve = employed.foodserve / total.employed * 100,
percentage.other = employed.other / total.employed * 100,
percentage.publicadmin =employed.publicadmin / total.employed * 100,
percentage.military = employed.military / total.employed * 100,
percentage.unemployed = employed.unemployed / total.employed * 100
)
# Print the result
print(result)
rm(code_ranges)
rm(count_data)
rm(total_employed)
# All industries as a percentage of total employed people.
esult <- Translation.data %>%
filter(EMPSTAT == 10) %>%
group_by(YEAR, MONTH) %>%
summarize(
employed.retail = sum(IND >= 4760 & IND <= 5790),
employed.agriculture = sum(IND >= 0170 & IND <= 0290),
employed.mining = sum(IND >= 0370 & IND <= 0490),
employed.construction = sum(IND >= 0370 & IND <= 0490),
employed.manufacturing = sum(IND >= 1070 & IND <= 3990),
employed.finance.insurance = sum(IND >= 6870 & IND <= 6992),
employed.RE.rental = sum(IND >= 7071 & IND <= 7490),
employed.science.technical.professional = sum(IND >= 7270 & IND <= 7490),
employed.management = sum(IND >= 7570),
employed.admin.waste = sum(IND >= 7580 & IND <= 7790),
employed.education = sum(IND >= 7860 & IND <= 7890),
employed.health.social = sum(IND >= 7970 & IND <= 8470),
employed.entertainment = sum(IND >= 8561 & IND <= 8590),
employed.foodserve = sum(IND >= 8660 & IND <= 8690),
employed.other = sum(IND >= 8770 & IND <= 9290),
employed.publicadmin = sum(IND >= 9370 & IND <= 9590),
employed.military = sum(IND >= 9670 & IND <= 9870),
employed.unemployed = sum(IND >= 9920),
total.employed = n()) %>%
mutate(
percentage.retail = employed.retail / total.employed * 100,
percentage.agriculture = employed.agriculture / total.employed * 100,
percentage.mining = employed.mining / total_employed * 100,
percentage.construction = employed.construction / total.employed * 100,
percentage.manufacturing = employed.manufacturing / total.employed * 100,
percentage.finance.insurance = employed.finance.insurance / total.employed * 100,
percentage.RE.rental = employed.RE.rental / total.employed * 100,
percentage.science.technical.professional = employed.science.technical.professional / total.employed * 100,
percentage.management = employed.management / total.employed * 100,
percentage.admin.waste = employed.admin.waste / total.employed * 100,
percentage.education = employed.education / total.employed * 100,
percentage.health.social = employed.health.social/ total.employed * 100,
percentage.entertainment = employed.entertainment / total.employed * 100,
percentage.foodserve = employed.foodserve / total.employed * 100,
percentage.other = employed.other / total.employed * 100,
percentage.publicadmin =employed.publicadmin / total.employed * 100,
percentage.military = employed.military / total.employed * 100,
percentage.unemployed = employed.unemployed / total.employed * 100
)
# All industries as a percentage of total employed people.
esult <- Translation.data %>%
filter(EMPSTAT == 10) %>%
group_by(YEAR, MONTH) %>%
summarize(
employed.retail = sum(IND >= 4760 & IND <= 5790),
employed.agriculture = sum(IND >= 0170 & IND <= 0290),
employed.mining = sum(IND >= 0370 & IND <= 0490),
employed.construction = sum(IND >= 0370 & IND <= 0490),
employed.manufacturing = sum(IND >= 1070 & IND <= 3990),
employed.finance.insurance = sum(IND >= 6870 & IND <= 6992),
employed.RE.rental = sum(IND >= 7071 & IND <= 7490),
employed.science.technical.professional = sum(IND >= 7270 & IND <= 7490),
employed.management = sum(IND >= 7570),
employed.admin.waste = sum(IND >= 7580 & IND <= 7790),
employed.education = sum(IND >= 7860 & IND <= 7890),
employed.health.social = sum(IND >= 7970 & IND <= 8470),
employed.entertainment = sum(IND >= 8561 & IND <= 8590),
employed.foodserve = sum(IND >= 8660 & IND <= 8690),
employed.other = sum(IND >= 8770 & IND <= 9290),
employed.publicadmin = sum(IND >= 9370 & IND <= 9590),
employed.military = sum(IND >= 9670 & IND <= 9870),
employed.unemployed = sum(IND >= 9920),
total.employed = n()) %>%
mutate(
percentage.retail = employed.retail / total.employed * 100,
percentage.agriculture = employed.agriculture / total.employed * 100,
percentage.mining = employed.mining / total.employed * 100,
percentage.construction = employed.construction / total.employed * 100,
percentage.manufacturing = employed.manufacturing / total.employed * 100,
percentage.finance.insurance = employed.finance.insurance / total.employed * 100,
percentage.RE.rental = employed.RE.rental / total.employed * 100,
percentage.science.technical.professional = employed.science.technical.professional / total.employed * 100,
percentage.management = employed.management / total.employed * 100,
percentage.admin.waste = employed.admin.waste / total.employed * 100,
percentage.education = employed.education / total.employed * 100,
percentage.health.social = employed.health.social/ total.employed * 100,
percentage.entertainment = employed.entertainment / total.employed * 100,
percentage.foodserve = employed.foodserve / total.employed * 100,
percentage.other = employed.other / total.employed * 100,
percentage.publicadmin =employed.publicadmin / total.employed * 100,
percentage.military = employed.military / total.employed * 100,
percentage.unemployed = employed.unemployed / total.employed * 100
)
# Print the result
print(result)
rm(esult)
# All industries as a percentage of total employed people.
result <- Translation.data %>%
filter(EMPSTAT == 10) %>%
group_by(YEAR, MONTH) %>%
summarize(
employed.retail = sum(IND >= 4760 & IND <= 5790),
employed.agriculture = sum(IND >= 0170 & IND <= 0290),
employed.mining = sum(IND >= 0370 & IND <= 0490),
employed.construction = sum(IND >= 0370 & IND <= 0490),
employed.manufacturing = sum(IND >= 1070 & IND <= 3990),
employed.finance.insurance = sum(IND >= 6870 & IND <= 6992),
employed.RE.rental = sum(IND >= 7071 & IND <= 7490),
employed.science.technical.professional = sum(IND >= 7270 & IND <= 7490),
employed.management = sum(IND >= 7570),
employed.admin.waste = sum(IND >= 7580 & IND <= 7790),
employed.education = sum(IND >= 7860 & IND <= 7890),
employed.health.social = sum(IND >= 7970 & IND <= 8470),
employed.entertainment = sum(IND >= 8561 & IND <= 8590),
employed.foodserve = sum(IND >= 8660 & IND <= 8690),
employed.other = sum(IND >= 8770 & IND <= 9290),
employed.publicadmin = sum(IND >= 9370 & IND <= 9590),
employed.military = sum(IND >= 9670 & IND <= 9870),
employed.unemployed = sum(IND >= 9920),
total.employed = n()) %>%
mutate(
percentage.retail = employed.retail / total.employed * 100,
percentage.agriculture = employed.agriculture / total.employed * 100,
percentage.mining = employed.mining / total.employed * 100,
percentage.construction = employed.construction / total.employed * 100,
percentage.manufacturing = employed.manufacturing / total.employed * 100,
percentage.finance.insurance = employed.finance.insurance / total.employed * 100,
percentage.RE.rental = employed.RE.rental / total.employed * 100,
percentage.science.technical.professional = employed.science.technical.professional / total.employed * 100,
percentage.management = employed.management / total.employed * 100,
percentage.admin.waste = employed.admin.waste / total.employed * 100,
percentage.education = employed.education / total.employed * 100,
percentage.health.social = employed.health.social/ total.employed * 100,
percentage.entertainment = employed.entertainment / total.employed * 100,
percentage.foodserve = employed.foodserve / total.employed * 100,
percentage.other = employed.other / total.employed * 100,
percentage.publicadmin =employed.publicadmin / total.employed * 100,
percentage.military = employed.military / total.employed * 100,
percentage.unemployed = employed.unemployed / total.employed * 100
)
# Print the result
print(result)
View(result)
View(result)
View(result)
View(Translation.data)
setwd("/Users/kevinbennett/Documents/Documents/GitHub/Data.Transation.2")
indnames <- import('indnames.csv')
# Load Necessary Packages
library(lubridate)
library(stringr)
library(tidyverse)
library(vtable)
library(fixest)
indnames <- import('indnames.csv')
library(readr)
library(dplyr)
indnames <- import('indnames.csv')
library(rio)
# Load Necessary Packages
library(lubridate)
library(stringr)
library(tidyverse)
library(vtable)
library(fixest)
library(readr)
library(dplyr)
library(rio)
# Load Data
library(ipumsr)
indnames <- import('indnames.csv')
# Use names()[] to change the UNITID and OPEID column names to lower case.
names(Translation.data)[20] <- "ind"
View(Translation.data)
View(indnames)
# Join Translation.data with indnames using the 'ind' column.
Translation.data_JOIN_indnames <-
inner_join(Translation.data, indnames, by = "ind")
View(Translation.data_JOIN_indnames)
# Join Translation.data with indnames using the 'ind' column.
Translation.data <-
inner_join(Translation.data, indnames, by = "ind")
rm(Translation.data_JOIN_indnames)
rm(Translation.data_JOIN_indnames)
Translation.data$Date.year.month <- paste(Translation.data$YEAR, Translation.data$MONTH)
View(Translation.data)
Translation.data <- Translation.data %>% mutate(covid.pre.post = case_when(
Date.year.month <= "2020 3" ~ "Before",
Date.year.month > "2020 3" ~ "After"
))
View(Translation.data)
# Create data set that contains only Retail data: in "Retail Trade" and EMPSTAT == 10 and 21
retail.data <- Translation.data %>% filter(indname == "Retail Trade" & EMPSTAT %in% c(10, 21))
View(retail.data)
retail.data <- retail.data %>%
group_by(Date.year.month) %>%
mutate(count.EMPSTAT.10 = sum(EMPSTAT == 10))
View(retail.data)
retail.data <- retail.data %>%
group_by(Date.year.month) %>%
mutate(
summarize(count.EMPSTAT.10 = sum(EMPSTAT == 10)))
retail.data <- retail.data %>%
group_by(Date.year.month) %>%
mutate(count.EMPSTAT.10 = sum(EMPSTAT == 10)))
retail.data <- retail.data %>%
group_by(Date.year.month) %>%
mutate(count.EMPSTAT.10 = sum(EMPSTAT == 10))
View(retail.data)
View(result)
retail.data <- retail.data %>%
group_by(Date.year.month) %>%
summarize(Date.year.month)
View(retail.data)
retail.data <- retail.data %>%
group_by(Date.year.month) %>%
reframe(Date.year.month)
View(retail.data)
# Create data set that contains only Retail data: in "Retail Trade" and EMPSTAT == 10 and 21
retail.data <- Translation.data %>% filter(indname == "Retail Trade" & EMPSTAT %in% c(10, 21))
View(retail.data)
Translation.data <- Translation.data %>% distinct(Date.year.month, covid.pre.post, .keep_all = TRUE)
View(Translation.data)
# Create data set that contains only Retail data: in "Retail Trade" and EMPSTAT == 10 and 21
retail.data <- Translation.data %>% filter(indname == "Retail Trade" & EMPSTAT %in% c(10, 21))
View(retail.data)
# Create data set that contains only Retail data: in "Retail Trade" and EMPSTAT == 10 and 21
retail.data <- Translation.data %>% filter(indname == "Retail Trade" & EMPSTAT %in% c(10, 21))
View(retail.data)
# Mutate Data: add a Cutoff Variable at 3.11.20 to indicate the WHO recognition of COVId as a global pandemic.
Translation.data <- Translation.data %>% mutate(covid.pre.post = case_when(
Date.year.month <= "2020 3" ~ "Before",
Date.year.month > "2020 3" ~ "After"
))
View(Translation.data)
# Join year and month columns together.
Translation.data$Date.year.month <- paste(Translation.data$YEAR, Translation.data$MONTH)
# Mutate Data: add a Cutoff Variable at 3.11.20 to indicate the WHO recognition of COVId as a global pandemic.
Translation.data <- Translation.data %>% mutate(covid.pre.post = case_when(
Date.year.month <= "2020 3" ~ "Before",
Date.year.month > "2020 3" ~ "After"
))
View(Translation.data)
# Read in indnames.csv
indnames <- import('indnames.csv')
# Rename the IND column in Translation.data to ind so that we can join them, using names()[].
names(Translation.data)[20] <- "ind"
# Join Translation.data with indnames using the 'ind' column.
Translation.data <-
inner_join(Translation.data, indnames, by = "ind")
# Join year and month columns together.
Translation.data$Date.year.month <- paste(Translation.data$YEAR, Translation.data$MONTH)
# Mutate Data: add a Cutoff Variable at 3.11.20 to indicate the WHO recognition of COVId as a global pandemic.
Translation.data <- Translation.data %>% mutate(covid.pre.post = case_when(
Date.year.month <= "2020 3" ~ "Before",
Date.year.month > "2020 3" ~ "After"
))
# Create data set that contains only Retail data: in "Retail Trade" and EMPSTAT == 10 and 21
retail.data <- Translation.data %>% filter(indname == "Retail Trade" & EMPSTAT %in% c(10, 21))
View(Translation.data)
# Load Necessary Packages
library(lubridate)
library(stringr)
library(tidyverse)
library(vtable)
library(fixest)
library(readr)
library(dplyr)
library(rio)
# Load Data
library(ipumsr)
ddi <- read_ipums_ddi("cps_00002.xml")
Translation.data <- read_ipums_micro(ddi)
Translation.data <- read_ipums_micro(ddi)
vtable(Translation.data)
